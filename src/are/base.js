var ARE = {};

(function (n) { var t = !1, r = /xyz/.test(function () { xyz }) ? /\b_super\b/ : /.*/, i = function () { }; i.extend = function (n) { function u() { !t && this.ctor && this.ctor.apply(this, arguments) } var o = this.prototype, e, f, i; t = !0, e = new this, t = !1; for (i in n) i != "statics" && (e[i] = typeof n[i] == "function" && typeof o[i] == "function" && r.test(n[i]) ? function (n, t) { return function () { var r = this._super, i; return this._super = o[n], i = t.apply(this, arguments), this._super = r, i } }(i, n[i]) : n[i]); for (f in this) this.hasOwnProperty(f) && f != "extend" && (u[f] = this[f]); if (u.prototype = e, n.statics) for (i in n.statics) n.statics.hasOwnProperty(i) && (u[i] = n.statics[i], i == "ctor" && u[i]()); return u.prototype.constructor = u, u.extend = arguments.callee, u.implement = function (n) { for (var t in n) e[t] = n[t] }, u }, n.__class = i })(this)